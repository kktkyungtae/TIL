1. 03_for


# 03_for

# 순회(반복)

# range 순차 정수 리스트
seq = range(10)
print(seq, type(seq))
print(seq[0:])
print(len(seq))

# 반복문의 증감식   0 1 2 3 4 5 6 7 8 9 
for i in seq :
    print(i, end= ' ' )
print() #루프 끝

# 3 ~ 9   3 4 5 6 7 8 9 
seq = range(3, 10)
for i in seq :
    print(i, end = ' ')
print()  

# 0 ~ 14 -> 3의 배수 : 0 3 6 9 12 
seq = range(0, 15, 3) 
for i in seq :
    print(i, end = ' ')
print()

# 0 ~ -8까지 -> -2의 배수 : 0 -2 -4 -6 -8
#seq = range(0, -9, 2)
#: -9까지 2의배수 출력은 아무것도 안나옴 - 에러는 아니지만 없으니까!
seq = range(0, -9, -2)
for i in seq :
    print(i, end=' ')
print()

print('-----------------------------------------------------------------------')

# enumerate
idx = 0
strList = ['one', 'two', 'three', 'four']
for val in strList :
    print('{0}:{1}'.format(idx, val))
    idx += 1
print()

#for idx, val in enumerate(['one', 'two', 'three', 'four']) :
for idx, val in enumerate(strList) :
    print('{0}:{1}'.format(idx, val))
    
print('-----------------------------------------------------------------------')

# zip - 데이터를 무작위로 짝지음
# 순차형 자료형을 짝지어 tuple list로 생성
seq1 = {'one', 'two', 'three', 'four'}
seq2 = {'red', 'blue', 'green', 'yellow'}
z = zip(seq1, seq2)
print(z)
print(type(z))

for data in z :
    print(data, type(data))
    
print('-----------------------------------------------------------------------')

z = zip(seq1, seq2)
for idx, (a, b) in enumerate(z) :
    print('%d: %s, %s' % (idx, a, b))

print('-----------------------------------------------------------------------')
# 데이터 분리하기 dict는 곧 tuple list를 역으로 분리
d = [('one', 1), ('two', 2), ('three', 3)]
seq1, seq2 = zip(*d) #d의 모든 데이터를 seq1와seq2로 분리할거야
print(seq1)
print(seq2)

print('-----------------------------------------------------------------------')
#list 빈공간[]에 넣기
results = []
for i in [1, 2, 3, 4, 5, 6, 7, 8, 9, 10] :
    result = i**2  # i*i
    results.append(result)
print(results)

print('-----------------------------------------------------------------------')
#Comprehension(list, set, dict)
strings = ['red', 'blue', 'yellow', 'green']
# strings에 있는 데이터들중 4글자 이하인 애들을 s에 담고 그걸 또 s에 담을거야
#    results = []
#    for s in strings :
#        if len(s) <= 4
#            results.append(s)
strings = [s for s in strings if len(s) <= 4]
print(strings)    # --> 문자열 길이가 4이하인 ['red', 'blue'] 추출

print('-----------------------------------------------------------------------')
# 1~100사이의 홀수로 이루어진 list 생성
odds = [i for i in range(1, 101) if i % 2 == 1]
print(odds)

print('-----------------------------------------------------------------------')
#list []
strings = ['red', 'blue', 'green', 'yello']
lens = [len(s) for s in strings]  # 추출된 문자열의 길이들이 list 담김 [3, 4, 5, 6]
print(lens)

#set  #{}   -> 중복제거 
lens = {len(s) for s in strings}
print(lens)

#dict
strings = ['red', 'blue', 'green', 'yello']
dicts = {s:len(s) for s in strings}
print(dicts)
































