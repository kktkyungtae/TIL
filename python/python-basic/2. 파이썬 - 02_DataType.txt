2. 파이썬 - 02_DataType.py

-파이썬의 데이터 타입
# bool      : True, False
# int       : 정수
# float     : 실수
# complex   : 복소수
# str       : 문자열(유니코드)
# bytes     : 0~255 사이의 코드
# list      : 객체 집합
# tuple     : 객체 집합 (순서 변경 불가능!)
# set       : 집합
# dict      : 객체 저장, 순서없이 key를 참조하여 활용

# 접근 방법
#   -Direct     : int, float, complex
#   -Sequence   : str, bytes, list, tuple
#   -Mapping    : dict

#bool
a = 10
print(a > 20)
print(a < 20)

# Data Type 확인
b= a==10
print(type(b)) 

# True -> 1, False = 0
print(b + 20)
print(True + True) #1 + 1
print(True + False) #1 + 0
print(False +False) #0 + 1

#int 무한대 표현 가능
i = 2**1024
print(type(i))
print(i)

#isinstance : 객체 맞는지 
a=20
print(type(a))
print(isinstance(a, int))  # a가 int형식의 객체인지

# 접두사
# 2진수 표현법 (0b)
b = 0b10100
# 8진수 (0o)
c = 0o20
# 16진수 (0x)
d = 0x20
print(b,c,d)

#float
a = 3.14
print(type(a))
print(isinstance(a, float))     #True
# 실수 값이 정수인지 판별 : 정수가 될 수 있냐. 
a = 3.14
print(a.is_integer())           #False
a = 3.0
print(a.is_integer())           #True

# 3*(10*10*10)
b = 3e3
c = -0.2e-4
print(b)
print(c)

#complex
a = 3 + 5j
print(a)
print(type(a))
print(isinstance(a, complex))

#복소수 연산
b = 7 - 2j
print(a + b)
#추출 시 float
print(b.real, b.imag)

# 복합 관계식
a = 10
print(0 < a < 20)
print(0 < a and a < 5)

# 객체 비교
# abc의 첫번쨰 a와 aaa의 첫번쨰 a와비교, 그다음 두번째끼리 비교, 근데b가 크잖 
print('abc' > 'aaa') #True
print((1,2,3) < (1,3,1))
print([1,2,3] > [1,2,0])
#객체 집합의 비교는 앞에서 부터 !!

'''
    String str = new String('Hello');
    String str = 'Hello';
    if(str == 'Hello') {}       ->주소까지 비교
    if(str.equals('Hello')) {}  -> 값비교
'''

# == : 객체의 값 비교 (동질성)  equals 같은거
# is : 객체 자체가 같은지 (동일성)
a = 10
b = 10
print(a == b)   #True
print(a is b)   #True

#Integer Cashing
# -5 ~ 256사이의 정수는 캐싱되어있음 : 임시저장
# PyInt_Object 배열로 유지 (이미 내부적으로 존재하고있음!)

# Script File Mode 와 Interative Mode의 차이점 !
# Scripte --> True
a = 257
b = 257
print(a == b)   #True
print(a is b)   #True

# Shell창에서
# Interative --> False
# >>> a = 257
# >>> b = 257
# >>> print(a == b)   #True
# >>> print(a is b)   #False

#bool Type -> True : 1, False : 0
print(True + 1) #2
a = 10
b = 20
print((a > b) + 1) #1

print(bool(10), bool(0))        # int
print(bool(3.14), bool(0.))     # float
print(bool('hello'), bool(''))  # str
print(bool([1,2,3]), bool([]))  # list
print(bool((1,2,3)), bool(()))  # tuple
print(bool({1,2,3}), bool({}), type({1,2,3})) #set
print(bool({1:2}), bool({}))    # dict
print(bool(None))               # None(Null)

















































